// eslint-disable-next-line import/no-extraneous-dependencies
require('dotenv').config();
const { writeFileSync } = require('fs');

/**
 * Compute API hostname from environment.
 * Use netlify env to get hostname
 */
function computeApiHostname() {
  switch (process.env.CONTEXT) {
    case 'production':
      return process.env.PROD_API;
    case 'branch-deploy':
      return process.env.STAGING_API;
    case 'deploy-preview': // TODO Find now.sh url...
    default:
      return '';
  }
}

function injectEnvVariables(rawEnv) {
  const env = Object
    .entries(rawEnv)
    .filter(([, val]) => val)
    .reduce((acc, [key, val]) => ({ ...acc, [key]: val }), {});

  console.log(`injecting env in environment.prod.ts: ${Object.keys(env).join(', ')}`);

  const content = `// This file is automatically generated by inject.env.js script
/* tslint:disable */
export const environment = {
  production: true,
  ${Object.entries(env).map(([key, val]) => `${key}: ${JSON.stringify(val)},`).join('\n  ')}
};
`;
  writeFileSync('src/environments/environment.prod.ts', content, { encoding: 'utf8' });
}

injectEnvVariables({
  RECAPTCHA_SITE_KEY: process.env.RECAPTCHA_SITE_KEY,
  BUGSNAG_KEY: process.env.BUGSNAG_KEY,
  API_HOSTNAME: computeApiHostname(),
  JWT_DAY_EXP_LONG: 30,
  JWT_DAY_EXP: 1,
});
