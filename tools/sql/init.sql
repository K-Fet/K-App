-- MySQL Script generated by MySQL Workbench
-- Mon Nov 27 16:45:05 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kapp
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `kapp` ;

-- -----------------------------------------------------
-- Schema kapp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kapp` DEFAULT CHARACTER SET utf8 ;
USE `kapp` ;

-- -----------------------------------------------------
-- Table `kapp`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`User` ;

CREATE TABLE IF NOT EXISTS `kapp`.`User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleteAt` TIMESTAMP NULL DEFAULT NULL,
  `email` VARCHAR(230) NULL,
  `password` VARCHAR(64) NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `school` VARCHAR(40) NULL,
  `active` TINYINT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`SpecialAccount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`SpecialAccount` ;

CREATE TABLE IF NOT EXISTS `kapp`.`SpecialAccount` (
  `userId` INT NOT NULL,
  `code` VARCHAR(64) NULL,
  PRIMARY KEY (`userId`),
  CONSTRAINT `fk_special_account_userId`
    FOREIGN KEY (`userId`)
    REFERENCES `kapp`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`Barman`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`Barman` ;

CREATE TABLE IF NOT EXISTS `kapp`.`Barman` (
  `userId` INT NOT NULL,
  `nickname` VARCHAR(45) NULL,
  `facebook` VARCHAR(45) NULL,
  `godFather` INT NULL,
  `dateOfBirth` DATE NULL,
  `flow` TEXT NULL,
  PRIMARY KEY (`userId`),
  INDEX `fk_godFather_idx` (`godFather` ASC),
  CONSTRAINT `fk_barman_userId`
    FOREIGN KEY (`userId`)
    REFERENCES `kapp`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_barman_godFather`
    FOREIGN KEY (`godFather`)
    REFERENCES `kapp`.`Barman` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`jwt-token`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`jwt-token` ;

CREATE TABLE IF NOT EXISTS `kapp`.`jwt-token` (
  `tokenId` VARCHAR(36) NOT NULL,
  `userId` INT NOT NULL,
  `revoked` TINYINT NULL DEFAULT 0,
  PRIMARY KEY (`tokenId`),
  INDEX `fk_userId_idx` (`userId` ASC),
  CONSTRAINT `fk_jwt-token_userId`
    FOREIGN KEY (`userId`)
    REFERENCES `kapp`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`Category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`Category` ;

CREATE TABLE IF NOT EXISTS `kapp`.`Category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`Service`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`Service` ;

CREATE TABLE IF NOT EXISTS `kapp`.`Service` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NULL,
  `startingDate` TIMESTAMP NULL,
  `endingDate` TIMESTAMP NULL,
  `nbMax` INT NULL,
  `categoryId` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_service_categoryId`
    FOREIGN KEY (`id`)
    REFERENCES `kapp`.`Category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`BarmanHasService`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`BarmanHasService` ;

CREATE TABLE IF NOT EXISTS `kapp`.`BarmanHasService` (
  `barmanId` INT NOT NULL,
  `serviceId` INT NOT NULL,
  `createdAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`barmanId`, `serviceId`),
  INDEX `fk_serviceId_idx` (`serviceId` ASC),
  CONSTRAINT `fk_barman_has_service_barmanId`
    FOREIGN KEY (`barmanId`)
    REFERENCES `kapp`.`Barman` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_barman_has_service_serviceId`
    FOREIGN KEY (`serviceId`)
    REFERENCES `kapp`.`Service` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`Kommission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`Kommission` ;

CREATE TABLE IF NOT EXISTS `kapp`.`Kommission` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`BarmanHasKommission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`BarmanHasKommission` ;

CREATE TABLE IF NOT EXISTS `kapp`.`BarmanHasKommission` (
  `barmanId` INT NOT NULL,
  `kommissionId` INT NOT NULL,
  `createdAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`barmanId`, `kommissionId`),
  INDEX `fk_kommissionId_idx` (`kommissionId` ASC),
  CONSTRAINT `fk_barman_has_kommission_barmanId`
    FOREIGN KEY (`barmanId`)
    REFERENCES `kapp`.`Barman` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_barman_has_kommission_kommissionId`
    FOREIGN KEY (`kommissionId`)
    REFERENCES `kapp`.`Kommission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`Role` ;

CREATE TABLE IF NOT EXISTS `kapp`.`Role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kapp`.`BarmanHasRole`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kapp`.`BarmanHasRole` ;

CREATE TABLE IF NOT EXISTS `kapp`.`BarmanHasRole` (
  `barmanId` INT NOT NULL,
  `roleId` INT NOT NULL,
  `createdAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`barmanId`, `roleId`),
  INDEX `fk_roleId_idx` (`roleId` ASC),
  CONSTRAINT `fk_barman_has_role_barmanId`
    FOREIGN KEY (`barmanId`)
    REFERENCES `kapp`.`Barman` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_barman_has_role_roleId`
    FOREIGN KEY (`roleId`)
    REFERENCES `kapp`.`Role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
